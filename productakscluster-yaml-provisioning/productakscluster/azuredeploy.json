{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceName": {
      "type": "string",
      "defaultValue": "aks101cluster",
      "metadata": {
        "description": "The name of the Managed Cluster resource."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of the Managed Cluster resource."
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
      }
    },
    "osDiskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      },
      "minValue": 0,
      "maxValue": 1023
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of nodes for the cluster."
      },
      "minValue": 1,
      "maxValue": 50
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "linuxAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Linux Virtual Machines."
      }
    },
    "sshRSAPublicKey": {
      "type": "string",
      "metadata": {
        "description": "Configure all linux machines with the SSH RSA public key string. Your key should include three parts, for example 'ssh-rsa AAAAB...snip...UcyupgH azureuser@linuxvm'"
      }
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "Client ID (used by cloudprovider)"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalObjectId": {
      "metadata": {
        "description": "The Service Principal Object Id"
      },
      "type": "string"
    },
    "networkContributorRoleId": {
      "metadata": {
        "description": "The network contributor role id"
      },
      "type": "string"
    },
    "osType": {
      "type": "string",
      "defaultValue": "Linux",
      "allowedValues": [
        "Linux"
      ],
      "metadata": {
        "description": "The type of operating system."
      }
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.12.6",
      "allowedValues": [
        "1.9.11",
        "1.10.9",
        "1.11.5",
        "1.12.4",
        "1.12.5",
        "1.12.6"
      ],
      "metadata": {
        "description": "The version of Kubernetes."
      }
    },
    "clusterVnetName": {
      "type": "string",
      "defaultValue": "productcluster-dev-eun-vnet",
      "metadata": {
        "description": "The product k8s cluster vnet"
      }
    },
    "clusterVnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/8",
      "metadata": {
        "description": "The product k8s cluster vnet address CIDR"
      }
    },
    "clusterSubnetName": {
      "type": "string",
      "defaultValue": "productcluster-dev-eun-subnet",
      "metadata": {
        "description": "The product k8s cluster subnet name"
      }
    },
    "clusterSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.240.0.0/16",
      "metadata": {
        "description": "The product k8s cluster subnet address CIDR"
      }
    },
    "logAnalyticsWorkSpaceName": {
      "type": "string",
      "defaultValue": "productcluster-dev-eun-loganalytics"
    },
    "aadClientAppId": {
      "type": "securestring",
      "metadata": {
        "description": "Application id of the AAD client application"
      }
    },
    "aadServerAppId": {
      "type": "securestring",
      "metadata": {
        "description": "Application id of the AAD server application"
      }
    },
    "aadServerAppSecret": {
      "type": "securestring",
      "metadata": {
        "description": "Secret of the AAD server application"
      }
    },
    "aadTenantId": {
      "type": "securestring",
      "metadata": {
        "description": "Tenant id of the AAD tenant"
      }
    },
    "vmssMinInstances": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Minimum scaled instances"
      }
    },
    "vmssMaxInstances": {
      "type": "int",
      "defaultValue": 5,
      "metadata": {
        "description": "Maximum scaled instances"
      }
    }
  },
  "variables": {
    "networkContributorRole": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', parameters('networkContributorRoleId'))]",
    "roleAssignmentName": "[concat(parameters('clusterVnetName'), '/Microsoft.Authorization/', guid(concat(resourceGroup().id), variables('networkContributorRole')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks/providers/roleAssignments",
      "name": "[variables('roleAssignmentName')]",
      "apiVersion": "2018-12-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('clusterVnetName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[variables('networkContributorRole')]",
        "principalId": "[parameters('servicePrincipalObjectId')]",
        "scope": "[resourceId('Microsoft.Network/virtualNetworks', parameters('clusterVnetName'))]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "name": "[parameters('logAnalyticsWorkSpaceName')]",
      "apiVersion": "2015-11-01-preview",
      "location": "West Europe",
      "properties": {
        "sku": {
          "Name": "Standalone"
        },
        "features": {
          "searchVersion": 1
        }
      }
    },
    {
      "apiVersion": "2018-10-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('clusterVnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('clusterVnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('clusterSubnetName')]",
            "id": "[parameters('clusterSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('clusterSubnetAddressPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-08-01-preview",
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[parameters('location')]",
      "name": "[parameters('resourceName')]",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkSpaceName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('clusterVnetName'))]"
      ],
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "osDiskSizeGB": 0,
            "maxCount": "[parameters('vmssMaxInstances')]",
            "minCount": "[parameters('vmssMinInstances')]",
            "count": 1,
            "enableAutoScaling": true,
            "type": "VirtualMachineScaleSets",
            "vmSize": "[parameters('agentVMSize')]",
            "osType": "[parameters('osType')]",
            "storageProfile": "ManagedDisks",
            "vnetSubnetID": "[concat(resourceId('Microsoft.Network/virtualNetworks',parameters('clusterVnetName')),'/subnets/',parameters('clusterSubnetName'))]"
          }
        ],
        "linuxProfile": {
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "[parameters('sshRSAPublicKey')]"
              }
            ]
          }
        },
        "servicePrincipalProfile": {
          "clientId": "[parameters('servicePrincipalClientId')]",
          "Secret": "[parameters('servicePrincipalClientSecret')]"
        },
        "enableRBAC": true,
        "networkProfile": {
          "networkPlugin": "kubenet",
          "podCidr": "192.168.0.0/16",
          "serviceCidr": "10.0.0.0/16",
          "dnsServiceIP": "10.0.0.10",
          "dockerBridgeCidr": "172.17.0.1/16"
        },
        "aadProfile": {
          "clientAppID": "[parameters('aadClientAppId')]",
          "serverAppID": "[parameters('aadServerAppId')]",
          "serverAppSecret": "[parameters('aadServerAppSecret')]",
          "tenantID": "[parameters('aadTenantId')]"
        },
        "addonProfiles": {
          "omsagent": {
            "enabled": true,
            "config": {
              "logAnalyticsWorkspaceResourceID": "[resourceId('Microsoft.OperationalInsights/workspaces',parameters('logAnalyticsWorkSpaceName'))]"
            }
          },
          "httpApplicationRouting": {
            "enabled": true
          }
        }
      },
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "[concat('Microsoft.Insights/', 'productdevcluster-diagnostics')]",
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "productdevcluster-diagnostics",
            "storageAccountId": null,
            "eventHubAuthorizationRuleId": null,
            "eventHubName": null,
            "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces',parameters('logAnalyticsWorkSpaceName'))]",
            "logs": [
              {
                "category": "kube-apiserver",
                "enabled": true,
                "retentionPolicy": {
                  "days": 10,
                  "enabled": true
                }
              },
              {
                "category": "kube-controller-manager",
                "enabled": true,
                "retentionPolicy": {
                  "days": 10,
                  "enabled": true
                }
              },
              {
                "category": "cluster-autoscaler",
                "enabled": true,
                "retentionPolicy": {
                  "days": 10,
                  "enabled": true
                }
              },
              {
                "category": "kube-scheduler",
                "enabled": true,
                "retentionPolicy": {
                  "days": 10,
                  "enabled": true
                }
              },
              {
                "category": "kube-audit",
                "enabled": true,
                "retentionPolicy": {
                  "days": 10,
                  "enabled": true
                }
              },
              {
                "category": "cluster-autoscaler",
                "enabled": true,
                "retentionPolicy": {
                  "days": 10,
                  "enabled": true
                }
              }
            ],
            "metrics": [
              {
                "timeGrain": "PT1M",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": 10
                }
              }
            ]
          },
          "dependsOn": [
            "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkSpaceName'))]",
            "[resourceId('Microsoft.ContainerService/managedClusters', parameters('resourceName'))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "[concat('ContainerInsights', '(', parameters('logAnalyticsWorkSpaceName'), ')')]",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkSpaceName'))]",
        "[resourceId('Microsoft.ContainerService/managedClusters', parameters('resourceName'))]"
      ],
      "subscriptionId": "[split(resourceId('Microsoft.OperationalInsights/workspaces',parameters('logAnalyticsWorkSpaceName')),'/')[2]]",
      "resourceGroup": "[split(resourceId('Microsoft.OperationalInsights/workspaces',parameters('logAnalyticsWorkSpaceName')),'/')[4]]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "apiVersion": "2015-11-01-preview",
              "type": "Microsoft.OperationsManagement/solutions",
              "location": "West Europe",
              "name": "[concat('ContainerInsights', '(', parameters('logAnalyticsWorkSpaceName'), ')')]",
              "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/', 'ContainerInsights(productcluster-dev-eun-loganalytics)')]",

              //"dependsOn": [
              //  "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkSpaceName'))]"
              //],
              "properties": {
                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces',parameters('logAnalyticsWorkSpaceName'))]"
              },
              "plan": {
                "name": "[Concat('ContainerInsights', '(', split(resourceId('Microsoft.OperationalInsights/workspaces',parameters('logAnalyticsWorkSpaceName')),'/')[8], ')')]",
                "product": "[Concat('OMSGallery/', 'ContainerInsights')]",
                "promotionCode": "",
                "publisher": "Microsoft"
              }
            }
          ]
        },
        "parameters": {}
      }
    }
  ],
  "outputs": {
    "controlPlaneFQDN": {
      "type": "string",
      "value": "[reference(parameters('resourceName')).fqdn]"
    }
  }
}
